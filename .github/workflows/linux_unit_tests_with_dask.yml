name: Linux Unit Tests (Dask Only)

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  unit_tests:
    name: ${{ matrix.python_version }} Unit Tests, Core Dependencies (${{ matrix.core_dependencies }}), Codecov (${{ matrix.codecov }}), Dask Only
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python_version: "3.7"
            core_dependencies: false
            codecov: false
          - python_version: "3.8"
            core_dependencies: false
            codecov: true
          - python_version: "3.8"
            core_dependencies: true
            codecov: true
          - python_version: "3.9"
            core_dependencies: false
            codecov: false
    steps:
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 2
      - name: Update apt and install Graphviz
        run: sudo apt update && sudo apt install -y graphviz
      - if: ${{ matrix.core_dependencies }}
        name: Installing Core Dependencies
        run: |
          pip install virtualenv
          virtualenv test_python -q
          source test_python/bin/activate
          pip install --upgrade pip -q
          pip install -e . --no-dependencies
          pip install -r core-requirements.txt
          pip install -r test-requirements.txt
          # "!" negates return code. exit nonzero if any of these deps are found
          ! pip freeze | grep -E "xgboost|catboost|lightgbm|plotly|ipywidgets|category_encoders"
          exit $?
      - if: ${{ !matrix.core_dependencies }}
        name: Installing Dependencies
        run: |
          pip install virtualenv
          virtualenv test_python -q
          source test_python/bin/activate
          make installdeps
          make installdeps-test
          pip freeze
      - name: Erase Coverage
        run: |
          source test_python/bin/activate
          coverage erase
      - if: ${{ matrix.core_dependencies }}
        name: Run dask unit tests with minimal dependencies
        run: |
          source test_python/bin/activate
          make git-test-minimal-deps-dask
      - if: ${{ !matrix.core_dependencies }}
        name: Run unit tests
        run: |
          source test_python/bin/activate
          make git-test-dask
      - if: ${{ matrix.codecov }}
        name: install coverage
        run: pip install coverage
      - if: ${{ matrix.codecov }}
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
