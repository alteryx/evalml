name: Linux Unit Tests with Minimum Dependencies

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  unit_tests:
    name: ${{ matrix.python_version }} min dep ${{ matrix.command }}, core deps (${{ matrix.core_dependencies }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - python_version: "3.7"
            core_dependencies: false
            command: 'git-test-automl'
          - python_version: "3.7"
            core_dependencies: false
            command: 'git-test-modelunderstanding'
          - python_version: "3.7"
            core_dependencies: false
            command: 'git-test-other'
          - python_version: "3.7"
            core_dependencies: false
            command: 'git-test-dask'
          - python_version: "3.7"
            core_dependencies: true
            command: 'git-test-automl-core'
          - python_version: "3.7"
            core_dependencies: true
            command: 'git-test-modelunderstanding-core'
          - python_version: "3.7"
            core_dependencies: true
            command: 'git-test-other-core'
          - python_version: "3.7"
            core_dependencies: true
            command: 'git-test-minimal-deps-dask'
    steps:
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 2
      - name: Update apt and install Graphviz
        run: sudo apt update && sudo apt install -y graphviz
      - name: Create virtual environment, upgrade pip
        run: |
          pip install virtualenv
          virtualenv test_python -q
          source test_python/bin/activate
          python -m pip install --upgrade pip -q
      - if: ${{ matrix.core_dependencies }}
        name: install evalml with test dependencies & core dependencies
        run: |
          source test_python/bin/activate
          pip install -e . --no-dependencies
          pip install -r evalml/tests/dependency_update_check/minimum_test_requirements.txt
          pip install -r evalml/tests/dependency_update_check/minimum_core_requirements.txt
      - if: ${{ !matrix.core_dependencies }}
        name: install evalml with test dependencies, core dependencies, & optional requirements
        run: |
          source test_python/bin/activate
          pip install -e . --no-dependencies
          pip install -r evalml/tests/dependency_update_check/minimum_test_requirements.txt
          pip install -r evalml/tests/dependency_update_check/minimum_core_requirements.txt
          pip install -r evalml/tests/dependency_update_check/minimum_requirements.txt
      - if: ${{ matrix.core_dependencies }}
        name: run tests with minimal dependencies
        run: |
          source test_python/bin/activate
          make ${{ matrix.command }}
      - if: ${{ !matrix.core_dependencies }}
        name: run tests
        run: |
          source test_python/bin/activate
          make ${{ matrix.command }}
